{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/callback/callback.component.css","webpack:///./src/app/components/callback/callback.component.html","webpack:///./src/app/components/callback/callback.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\\n\"","import { Component, Inject } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  constructor(@Inject(\"auth\") public auth: AuthService) {\n    auth.handleAuthentication();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nimport { routing } from './app.routes';\n\nimport { DataService } from './services/data.service';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuardService } from './services/auth-guard.service';\n\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { FormsModule } from '@angular/forms';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HttpModule } from '@angular/http';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { CallbackComponent } from './components/callback/callback.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    NavbarComponent,\n    ProfileComponent,\n    CallbackComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    routing\n  ],\n  providers: [{\n    provide: \"data\",\n    useClass: DataService\n  }, {\n    provide: \"auth\",\n    useClass: AuthService\n  }, {\n    provide: \"authGuard\",\n    useClass: AuthGuardService\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Routes, RouterModule} from '@angular/router';\nimport { ProblemListComponent} from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent} from './components/problem-detail/problem-detail.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { AuthGuardService} from './services/auth-guard.service';\nimport { CallbackComponent } from './components/callback/callback.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"problems\",\n    pathMatch: \"full\"\n  }, \n  {\n    path: \"problems\",\n    component: ProblemListComponent\n  },\n  {\n    path: \"problems/:id\",\n    component: ProblemDetailComponent\n  },\n  {\n    path: \"profile\",\n    component: ProfileComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: \"callback\",\n    component: CallbackComponent\n  },\n  {\n    path: \"**\",\n    redirectTo: \"problems\"\n  }\n];\n\nexport const routing = RouterModule.forRoot(routes);","module.exports = \".loading {\\n  position: absolute;\\n  display: flex;\\n  justify-content: center;\\n  height: 100vh;\\n  width: 100vw;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  background-color: #fff;\\n}\"","module.exports = \"<div class=\\\"loading\\\">\\n  <img src=\\\"assets/loading.svg\\\" alt=\\\"loading\\\">\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-callback',\n  templateUrl: './callback.component.html',\n  styleUrls: ['./callback.component.css']\n})\nexport class CallbackComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{title}}</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n    </form>\\n  </div>\\n\\n  <ul class=\\\"nav navbar-nav navbar-right\\\">\\n    <li>\\n      <form class=\\\"navbar-form\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"!auth.isAuthenticated()\\\" (click)=\\\"login()\\\">Sign in</button>\\n      </form>\\n    </li>\\n    <li class=\\\"dropdown\\\">\\n      <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{username}} <span class=\\\"caret\\\"></span></a>\\n      <ul class=\\\"dropdown-menu\\\">\\n        <li><a routerLink=\\\"/profile\\\">My Profile</a></li>\\n        <li><a href=\\\"#\\\">My Favorites</a></li>\\n        <li><a href=\\\"#\\\">My Submissions</a></li>\\n        <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n        <li><a href=\\\"#\\\" *ngIf=\\\"auth.isAuthenticated()\\\" (click)=\\\"logout()\\\">Log Out</a></li>\\n      </ul>\\n    </li>\\n  </ul>\\n\\n</nav>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  title: string = \"LeeCode\";\n  username: string = \"LEE\";\n\n  constructor(@Inject(\"auth\") private auth) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.auth.login();\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"authGuard.isAdmin()\\\">\\n  <form #formRef=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemName\\\">Problem Name</label>\\n      <input \\n        type=\\\"text\\\" \\n        class=\\\"form-control\\\" \\n        id=\\\"problemName\\\" \\n        name=\\\"problemName\\\" \\n        required \\n        placeholder=\\\"Input Problem Name\\\" \\n        [(ngModel)]=\\\"newProblem.name\\\"\\n      >\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemDesc\\\">Problem Description</label>\\n      <textarea \\n        type=\\\"text\\\" \\n        row=\\\"3\\\"\\n        class=\\\"form-control\\\" \\n        id=\\\"problemDesc\\\" \\n        name=\\\"problemDesc\\\" \\n        required \\n        placeholder=\\\"Input Problem Description\\\" \\n        [(ngModel)]=\\\"newProblem.desc\\\"\\n      ></textarea>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">    \\n      <label for=\\\"difficulty\\\">Difficulty</label>\\n      <select \\n        class=\\\"form-control\\\" \\n        id=\\\"difficulty\\\" \\n        name=\\\"difficulty\\\" \\n        [(ngModel)]=\\\"newProblem.difficulty\\\"\\n      >\\n        <option value=\\\"\\\" disabled selected>Select difficulty</option>\\n        <option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">\\n          {{difficulty}}\\n        </option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addProblem()\\\">Add Problem</button>\\n      </div>\\n    </div>\\n\\n  </form>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from 'src/app/models/problem.model';\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n  id: 0,\n  name: \"\",\n  desc: \"\",\n  difficulty: \"\",\n  acceptance: 0\n});\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n\n  public difficulties: string[] = [\"Easy\", \"Medium\", \"Hard\"];\n\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n\n  constructor(\n    @Inject('data') private data,\n    @Inject('authGuard') private authGuard\n  ) { }\n\n  ngOnInit() {\n  }\n\n  addProblem(): void {\n    this.data.addProblem(this.newProblem)\n                .catch(error => console.log(error.body));\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n  <div class=\\\"col-xs-12 col-md-4\\\">\\n    <div>\\n      <h2>\\n        {{problem.id}}. {{problem.name}}\\n      </h2>\\n      <p>\\n        {{problem.desc}}\\n      </p>\\n      <br />\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from 'src/app/models/problem.model';\nimport { ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n\n  problem: Problem;\n\n  constructor(\n    private route: ActivatedRoute,\n    @Inject(\"data\") private data\n  ) { \n\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.data.getProblem(+params[\"id\"])\n                  .then(problem => this.problem = problem);\n    });\n  }\n\n}\n","module.exports = \".diff-text {\\n  text-transform: capitalize;\\n}\\n.diff-easy {\\n  background-color: #5cb85c;\\n}\\n.diff-medium {\\n  background-color: #f0ad4a;\\n}\\n.diff-hard {\\n  background-color: #d9534f;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-new-problem></app-new-problem>\\n  <table class=\\\"table table-striped table-hover\\\">\\n      <thead>\\n        <tr >\\n          <th scope=\\\"col\\\">#</th>\\n          <th scope=\\\"col\\\">Title</th>\\n          <th scope=\\\"col\\\">Acceptance</th>\\n          <th scope=\\\"col\\\">Difficulty</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let problem of problems\\\">\\n          <th scope=\\\"row\\\">{{problem.id}}</th>\\n          <td><a [routerLink]=\\\"['/problems', problem.id]\\\">{{problem.name}}</a></td>\\n          <td>{{problem.acceptance * 100 + '%'}}</td>\\n          <td><span class=\\\"badge badge-pill badge-secondary diff-text {{'diff-' + problem.difficulty.toLowerCase()}}\\\">{{problem.difficulty}}</span></td>      \\n        </tr>\\n      </tbody>\\n    </table>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { Problem } from '../../models/problem.model';\nimport { Subscription } from 'rxjs';\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: \"./problem-list.component.html\",\n  styleUrls: [\"./problem-list.component.css\"]\n})\nexport class ProblemListComponent implements OnInit {\n\n  problems: Problem[];\n\n  subscriptionProblems: Subscription;\n\n  constructor(@Inject(\"data\") private data) { }\n\n  ngOnInit() {\n    this.getProblems();\n  }\n\n  getProblems(): void {\n    this.subscriptionProblems = this.data.getProblems()\n                                            .subscribe(problems => this.problems = problems);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\n  <ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\" role=\\\"tablist\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link active\\\" id=\\\"home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#home\\\" role=\\\"tab\\\" aria-controls=\\\"home\\\" aria-selected=\\\"true\\\">Personal Information</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" id=\\\"profile-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#profile\\\" role=\\\"tab\\\" aria-controls=\\\"profile\\\" aria-selected=\\\"false\\\">Change Password</a>\\n    </li>\\n  </ul>\\n  <div class=\\\"tab-content\\\" id=\\\"myTabContent\\\">\\n    <div class=\\\"tab-pane fade show active\\\" id=\\\"home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"home-tab\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n        name=\\\"email\\\" disabled value=\\\"{{profile?.name}}\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">User name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"usernmae\\\"\\n        name=\\\"username\\\" disabled value=\\\"{{ profile?.nickname }}\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"tab-pane fade\\\" id=\\\"profile\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"profile-tab\\\">\\n        <form class=\\\"navbar-form\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-large btn-success\\\" (click)=\\\"resetPassword()\\\">Reset password via email</button>\\n        </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  profile: any;\n\n  constructor(@Inject('auth') private auth) { }\n\n  ngOnInit() {\n    if (this.auth.userProfile) {\n      this.profile = this.auth.userProfile;\n    } else {\n      this.auth.getProfile((err, profile) => {\n        this.profile = profile;\n      });\n    }\n  }\n\n  resetPassword() {\n    this.auth.resetPassword();\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(\n    @Inject('auth') private auth,\n    public router: Router\n  ) { }\n\n  canActivate(): boolean {\n    if (this.auth.isAuthenticated()) {\n      return true;\n    } else {\n      this.router.navigate(['/problems']);\n      return false;\n    }\n  }\n\n  isAdmin(): boolean {\n    // if (this.auth.isAuthenticated() && this.auth.getProfile().roles.includes('Admin')) {\n    //   return true;\n    // } else {\n    //   return false;\n    // }\n    return true;\n  }\n}\n","// src/app/auth/auth.service.ts\n\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport * as auth0 from 'auth0-js';\n\n(window as any).global = window;\n\n@Injectable()\nexport class AuthService {\n\n  auth0 = new auth0.WebAuth({\n    clientID: 'K2EiUUL7b_DtZ4S-Z6jqym-L1BXCtypn',\n    domain: 'lixuanqi.auth0.com',\n    responseType: 'token id_token',\n    audience: 'https://lixuanqi.auth0.com/userinfo',\n    redirectUri: 'http://localhost:3000/callback',\n    scope: 'openid profile'\n  });\n\n  userProfile: any;\n\n  constructor(public router: Router) {}\n\n  public login(): void {\n    this.auth0.authorize();\n  }\n\n  public handleAuthentication(): void {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        window.location.hash = '';\n        this.setSession(authResult);\n        this.router.navigate(['/home']);\n      } else if (err) {\n        this.router.navigate(['/home']);\n        console.log(err);\n      }\n    });\n  }\n\n  private setSession(authResult): void {\n    // Set the time that the Access Token will expire at\n    const expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', expiresAt);\n  }\n\n  public logout(): void {\n    // Remove tokens and expiry time from localStorage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    // Go back to the home route\n    this.router.navigate(['/']);\n  }\n\n  public isAuthenticated(): boolean {\n    // Check whether the current time is past the\n    // Access Token's expiry time\n    const expiresAt = JSON.parse(localStorage.getItem('expires_at') || '{}');\n    return new Date().getTime() < expiresAt;\n  }\n\n  public getProfile(cb): void {\n    const accessToken = localStorage.getItem('access_token');\n    if (!accessToken) {\n      throw new Error('Access Token must exist to fetch profile');\n    }\n  \n    const self = this;\n    this.auth0.client.userInfo(accessToken, (err, profile) => {\n      if (profile) {\n        self.userProfile = profile;\n      }\n      cb(err, profile);\n    });\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { PROBLEMS } from '../mock-problem';\nimport { Problem } from '../models/problem.model';\nimport { Http, Response, Headers } from '@angular/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private problemsSource = new BehaviorSubject<Problem[]>([]);\n\n  constructor(private http: Http) { }\n\n  getProblems(): Observable<Problem[]> {\n    this.http.get(\"api/v1/problems\")\n      .toPromise()\n      .then((res: Response) => {\n        this.problemsSource.next(res.json());\n      })\n      .catch(this.handleError);\n\n    return this.problemsSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    return this.http.get(`api/v1/problems/${id}`)\n                      .toPromise()\n                      .then((res: Response) => res.json())\n                      .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem): Promise<Problem> {\n    let options = {\n      headers: new Headers({'content-type': 'application/json'})\n    }\n    return this.http.post('/api/v1/problems', problem, options)\n      .toPromise()\n      .then((res: Response) => {\n        this.getProblems(); // refresh problem list.\n        return res.json();\n      })\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error);\n    return Promise.reject(error.body || error);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}